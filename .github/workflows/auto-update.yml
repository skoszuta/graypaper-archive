name: Update Graypaper

on:
  pull_request:
  workflow_dispatch:

jobs:
  check_for_updates:
    runs-on: ubuntu-latest
    outputs:
      local_version: ${{steps.local_version.outputs.VERSION}}
      remote_version: ${{steps.remote_version.outputs.VERSION}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Check local version
      id: local_version
      run: echo "VERSION=$(cat graypaper/VERSION)" >> "$GITHUB_OUTPUT"
    - name: Get latest graypaper and compare versions
      id: remote_version
      run: |
        git submodule update --remote
        echo "VERSION=$(cat graypaper/VERSION)" >> "$GITHUB_OUTPUT"
  update:
    runs-on: ubuntu-latest
    needs: check_for_updates
    permissions:
      contents: write
      pull-requests: write
    env:
      GH_TOKEN: ${{ github.token }}
    # if: needs.check_for_updates.outputs.local_version != needs.check_for_updates.outputs.remote_version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Get GitHub Actions Bot details
        id: bot_details
        uses: raven-actions/bot-details@v1
      - name: Get latest graypaper and create a pull request
        id: remote_version
        run: |
          git config --global user.name '${{ steps.bot_details.outputs.name }}'
          git config --global user.email '${{ steps.bot_details.outputs.email }}'
          git submodule update --remote
          scripts/build-pdf-docker.sh
          VERSION=v$(cat graypaper/VERSION)
          git checkout -b feature/$VERSION
          git add .
          git commit -m "Bumped to ${VERSION}"
          git push --set-upstream origin feature/$VERSION
          gh pr create -B main -H feature/$VERSION --title "Bump to ${VERSION}" --body ""
        #   gh pr merge --merge --delete-branch
       